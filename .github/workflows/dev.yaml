name: Terraform Deploy (Dev)

on:
  push:
    branches:
      - dev

jobs:
  deploy_dev:
    runs-on: ubuntu-latest
    needs: [integration-test, unit-test]

    env:
      app_acronym: "crc"
      region_acronym: "use1"
      environment_acronym: "dev"


    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: 0.14.0

    - name: Determine branch name
      id: branch_name
      run: echo "BRANCH_NAME=$(basename $GITHUB_REF)" >> $GITHUB_ENV

    - name: Determine plan file name
      id: plan_filename
      run: echo "PLAN_FILE=terraform-${app_acronym}-${region_acronym}-${environment_acronym}-${GITHUB_SHA::8}-${GITHUB_RUN_NUMBER}-${BRANCH_NAME}" >> $GITHUB_ENV

    - name: Terraform Init and Plan
      run: |
        terraform init -backend-config="bucket=rahul-crc-use1-dev-terraform" \
                         -backend-config="key=state/terraform.tfstate" \
                         -backend-config="region=us-east-1" \
                         -backend-config="dynamodb_table=terraform-lock-table"
        terraform plan -out=$PLAN_FILE.tfplan -var-file=variables_dev.tfvars
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
  
    - name: Upload Terraform plan to S3
      run: |
        aws s3 cp $PLAN_FILE.tfplan s3://rahul-crc-use1-dev-terraform/plan/ --region us-east-1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}

    - name: Terraform Apply
      run: |
        terraform apply -auto-approve -var-file=variables_dev.tfvars
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}